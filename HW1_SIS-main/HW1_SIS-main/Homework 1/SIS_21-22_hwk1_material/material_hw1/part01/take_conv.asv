%% Convolution function
% Kagan Erunsal, kagan.erunsal@epfl.ch, Oct 2021

% first_signal: first signal as vector or function
% second_signal: second signal as vector or function
% aux_var: Any auxillary variable you might need
% result: convolution result as vector

function  result = take_conv(first_signal,second_signal,aux_var)

n = length(first_signal);
m = length(second_signal);
N = n+m-1;

for i = 1
% result = 0;
% 
% H= fft(first_signal);
% S= fft(second_signal);
% 

% for i = 1:length(aux_var)/2
%      H(i) = fft(first_signal(i));
%      S(i) = fft(second_signal(i));
%      fprintf('%f ; %f\n', H(i), S(i))
% 
%     
% end
% 
% fprintf('%f ; %f\n', length(H), length(S))
% 
% Y1 = S1.*H1;
% result = ifft(Y1);

% for j=1:length(aux_var)
%     for i = 1:aux_var(j)
%         result_interim = result_interim + first_signal(i)*second_signal(aux_var(j)-i);
%        
%     end
%     result(aux_var(j)) = result_interim;
% end


end

